name: Repair Paths
on:
  workflow_dispatch:
    inputs:
      apply:
        description: 'Apply changes (false = dry-run only)'
        required: true
        type: boolean
        default: false

jobs:
  repair-paths:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install boto3 pandas python-dotenv

    - name: Run repair paths (dry-run)
      if: ${{ !inputs.apply }}
      env:
        SPACES_ACCESS_KEY_ID: ${{ secrets.SPACES_ACCESS_KEY_ID }}
        SPACES_SECRET_ACCESS_KEY: ${{ secrets.SPACES_SECRET_ACCESS_KEY }}
        SPACES_BUCKET_NAME: ${{ secrets.SPACES_BUCKET_NAME }}
        SPACES_REGION: ${{ secrets.SPACES_REGION }}
        SPACES_BASE_PREFIX: ${{ vars.SPACES_BASE_PREFIX }}
        DATA_ROOT: ${{ vars.DATA_ROOT }}
        UNIVERSE_KEY: ${{ vars.UNIVERSE_KEY }}
      run: |
        echo "Running repair paths in DRY-RUN mode..."
        python -m tools.repair_paths --dry-run

    - name: Run repair paths (apply)
      if: ${{ inputs.apply }}
      env:
        SPACES_ACCESS_KEY_ID: ${{ secrets.SPACES_ACCESS_KEY_ID }}
        SPACES_SECRET_ACCESS_KEY: ${{ secrets.SPACES_SECRET_ACCESS_KEY }}
        SPACES_BUCKET_NAME: ${{ secrets.SPACES_BUCKET_NAME }}
        SPACES_REGION: ${{ secrets.SPACES_REGION }}
        SPACES_BASE_PREFIX: ${{ vars.SPACES_BASE_PREFIX }}
        DATA_ROOT: ${{ vars.DATA_ROOT }}
        UNIVERSE_KEY: ${{ vars.UNIVERSE_KEY }}
      run: |
        echo "Running repair paths in APPLY mode..."
        python -m tools.repair_paths --apply

    - name: Summary
      run: |
        echo "Repair paths workflow completed."
        echo "Mode: ${{ inputs.apply && 'APPLY' || 'DRY-RUN' }}"