import streamlit as st
import sys
import os
import pandas as pd

# --- System Path Setup ---
# This allows the Streamlit app to find the 'utils' directory
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from utils.helpers import read_tickerlist_from_s3, save_list_to_s3, read_df_from_s3

# --- Page Configuration ---
st.set_page_config(
    page_title="Trading System Dashboard",
    layout="wide"
)

st.title("Trading System Control Panel & Dashboard")

# --- Ticker List Management ---
st.header("Master Ticker List Management")

# Read the current list from the cloud to display it
try:
    current_tickers = read_tickerlist_from_s3('tickerlist.txt')
    current_tickers_str = "\n".join(current_tickers)
except Exception as e:
    st.error(f"Could not load the current ticker list: {e}")
    current_tickers_str = ""

st.write("Enter your tickers for the day below, one per line. This will overwrite the current list.")

# Text area for user input
new_tickers_input = st.text_area(
    "Enter Tickers (one per line):",
    value=current_tickers_str,
    height=250
)

# Button to update the list
if st.button("Update Master Ticker List"):
    if new_tickers_input:
        # Convert the string input into a clean list of uppercase tickers
        new_tickers_list = [ticker.strip().upper() for ticker in new_tickers_input.split('\n') if ticker.strip()]
        
        # Save the new list to the cloud storage
        save_list_to_s3(new_tickers_list, 'tickerlist.txt')
        
        st.success(f"Successfully updated the ticker list with {len(new_tickers_list)} tickers!")
        st.rerun() # Rerun the app to show the updated list immediately
    else:
        st.warning("The ticker list cannot be empty.")

# --- Live Signal Display ---
st.header("Live Trade Signals")

# Read the final trade signals file from the cloud
trade_signals_df = read_df_from_s3('data/trade_signals.csv')

if not trade_signals_df.empty:
    st.write("These are the latest, actionable trade plans generated by the system.")
    st.dataframe(trade_signals_df, use_container_width=True)
else:
    st.info("No valid trade signals found yet. The system may be warming up or there may be no setups matching your criteria at this time.")

